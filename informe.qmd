---
title: "Jácome-Navarrete-Juan-PEC1"
author: "Juan C. Jácome Navarrete"
date: today
format:
  pdf:
    toc: true
    number-sections: true
editor: visual
params:
  assay: datos/assay.tsv
  coldata: datos/coldata.txt
  rowdata: datos/rowdata.tsv
bibliography: references.bib
csl: apa.csl
---

```{r setup, include=FALSE, warning = FALSE, message=FALSE}
knitr::opts_chunk$set(echo = TRUE)
# Lista completa de paquetes requeridos
paquetes <- c("metabolomicsWorkbenchR", "POMA", "SummarizedExperiment", "readr",
  "tibble", "S4Vectors", "dplyr", "ggplot2", "patchwork", "scales", "ggrepel", 
  "pheatmap", "RColorBrewer", "tidyr", "knitr", "kableExtra")

# Identificar paquetes que no están instalados
paquetes_faltantes <- paquetes[!paquetes %in% rownames(installed.packages())]

# Instalar los paquetes faltantes
if (length(paquetes_faltantes) > 0) {install.packages(paquetes_faltantes)}

# Cargar los paquetes
invisible(lapply(paquetes, library, character.only = TRUE))
```

```{r funciones, include=FALSE, warning = FALSE, message=FALSE}

# Función para calcular abundancias promedio de sujeto y por fraccion SummarizedExperiment
calcular_abundancia_por_sujeto <- function(se_objeto) {
  # Convertir a formato largo
  matriz_df <- as.data.frame(assay(se_objeto)) %>% rownames_to_column(var = "metabolito") %>% 
  pivot_longer(-metabolito, names_to = "Muestra", values_to = "intensidad") %>% 
    # Añadir la fracción de leche desde colData
    left_join(as.data.frame(colData(se_objeto)) %>% 
                rownames_to_column("Muestra"), by = "Muestra")
  
  # Calcular media por sujeto y fracción
  matriz_resumen <- matriz_df %>% 
    # Agrupar por sujeto, fracción y metabolito
    group_by(sujeto, Milk_fraction, metabolito) %>% 
    summarise(media = mean(intensidad), .groups = "drop") # Calcular media
  
  # Calcular porcentaje relativo dentro de cada fracción y sujeto
  matriz_resumen <- matriz_resumen %>%
    group_by(sujeto, Milk_fraction) %>% # Agrupar por sujeto y fracción
    mutate(porcentaje = media / sum(media) * 100) %>% # Calcular porcentaje
    ungroup()
  
  return(matriz_resumen)
}


# Función para crear SummarizedExperiment agrupado
agrupar_por_clase <- function(se, clase) {
  # Extraer matriz y metadatos
  matriz <- assay(se)
  rowdata <- as.data.frame(rowData(se)) 
  
  # Agregar la clase deseada como columna de la matriz
  matriz_df <- as.data.frame(matriz) %>%
    mutate(clase = rowdata[[clase]]) %>% # Agregar la clase
    group_by(clase) %>% # Agrupar por clase
    summarise(across(everything(), sum, na.rm = TRUE)) %>% # Sumar por clase
    filter(!is.na(clase)) %>% # Eliminar NA
    column_to_rownames("clase") # Usar la clase como fila
  
  # Crear nuevo SE con la matriz agrupada
  SummarizedExperiment( assays = list(abundancia = as.matrix(matriz_df)),
    colData = colData(se), rowData = DataFrame(nombre_clase = rownames(matriz_df)))
}


#funcion para seleccionar los top n metabolitos y agrupar el resto "otros"
seleccionar_top_y_otros <- function(se_imputed, top_n = 20) {
  matriz <- assay(se_imputed)
  
  # Sumar la abundancia total por fila (metabolito o clase)
  suma_total <- rowSums(matriz)
  
  # Seleccionar los top_n más abundantes
  top_elementos <- names(sort(suma_total, decreasing = TRUE))[1:top_n]
  
  # Dividir la matriz
  matriz_top <- matriz[top_elementos, , drop = FALSE]
  matriz_otros <- matriz[!rownames(matriz) %in% top_elementos, , drop = FALSE]
  
  # Sumar el resto como "Others"
  fila_otros <- matrix(colSums(matriz_otros), nrow = 1,
                       dimnames = list("Others", colnames(matriz)))
  
  # Combinar top + others
  nueva_matriz <- rbind(matriz_top, fila_otros)
  
  # Crear nuevo rowData con los nombres nuevos
  nueva_rowData <- DataFrame(nombre = rownames(nueva_matriz))
  
  # Crear el nuevo SummarizedExperiment
  SummarizedExperiment(assays = list(abundancia = nueva_matriz), colData = colData(se),
    rowData = nueva_rowData)
}

## definir colores para todo el informe
colores_fraccion <- c(
  "fat"   = "#1f77b4",  # azul
  "skim"  = "#e377c2",  # rosa
  "whole" = "#ff7f0e"   # naranja
)

colores_sujeto <- c(
  "BLS001A" = "#d62728",  # rojo
  "BLS002A" = "#2ca02c",  # verde
  "BLS003A" = "#9467bd",  # púrpura
  "BLS010A" = "#17becf"   # celeste
)
```

# Resumen

Se analizó el perfil metabolómico de 12 muestras de leche humana, correspondientes a tres fracciones (entera, lipídica y acuosa) de cuatro madres, utilizando datos del estudio ST000957. Se construyó un objeto `SummarizedExperiment` para proceder con la exploración de los datos. Las fracciones acuosa y entera presentaron mayor cantidad y concentración de metabolitos que la lipídica, especialmente compuestos hidrosolubles como phosphocholine y L-carnitine. Al agrupar por clase química, destacaron aminoácidos, péptidos y colinas. El análisis multivariante reveló que las diferencias entre madres fueron más marcadas que entre fracciones. Además, algunos metabolitos (como ácidos biliares conjugados) se concentraron en fracciones lipídicas, reflejando su afinidad hidrofóbica. Las limitaciones incluyeron el uso exclusivo del modo positivo, lo que pudo evitar la detección de otros metabolitos como carbohidratos.

# Objetivo

El presente trabajo tiene como objetivo principal analizar las diferencias y patrones del perfil metabolómico de la leche humana recolectada en distintas fracciones (entera, lipídica y acuosa) y de diferentes madres.

# Métodos

## Origen de los datos

Para el análisis se seleccionó el dataset **ST000957 [@carney]**, titulado *"Global metabolomics of human milk fractions"*, disponible en Metabolomics Workbench. Se trata de un estudio transversal con 12 muestras biológicas de leche humana, que analiza el perfil metabólico en tres fracciones de la leche: lipídica (fat), acuosa (skim) y entera (whole).

Este estudio fue realizado por la University of Florida utilizando espectrometría de masas acoplada a cromatografía líquida (LC-MS). Para simplificar el análisis solo se centró exclusivamente en metabolitos detectados bajo modo de ionización positiva.

Las muestras fueron recolectadas en estado de ayuno, aproximadamente 30 mL de leche y posterior fraccionamiento por centrifugación. No se especificó el estadio de lactancia al momento de la recolección.

```{r query, warning = FALSE, message=FALSE, echo=FALSE}

#BUSCA LA INFORMACIÓN EN LA BASE DE DATOS DE Metabolomics Workbench
#necesita conexión a internet
info_df <- as.data.frame(t(do_query('study',
                                    'study_id',
                                    'ST000957',
                                    'summary')))[1:6, , drop = FALSE]

# Mostrar con kable
kable(info_df, col.names = c("Campo", "Valor"), 
             caption = "Resumen del estudio ST000957") %>%
  kable_styling(latex_options = c("striped", "hold_position", "scale_down"),
                position = "center", font_size = 10)
```

## Estructura de los datos

Los datos fueron obtenidos de tres archivos diferentes con los que se creó objeto **`SummarizedExperiment`**. Los archivos fueron:

1.  Una matriz de abundancias (`assay`): esta matriz contiene en las columnas las muestras y las filas los metabolitos. Cada celda o combinación de fila y columna es un numero entero que representa la cuantificación de metabolitos en cada muestra.

2.  Una tabla de metadatos de muestra (`colData`): contiene información sobre las muestras y debe coincidir con las columnas de matriz del ensayo. Las variables de las muestras son:

-   `sujeto`: identifica a la madre donante (BLS001A, BLS002A, etc.).
-   `Milk_fraction`: indica si la muestra corresponde a la fracción lipídica, acuosa o entera.

3.  Una tabla de anotaciones de metabolitos (`rowData`): contiene información sobre los metabolitos. En este caso se trata de la clasificación de los metabolismos según el la base de datos *Metabolics Workbench*. Debe coincidir con las filas de matriz del ensayo.

-   `Standardized_name`: nombre estandarizado según *Metabolomics Workbench*
-   `Formula`: fórmula química.
-   `Super_class`, `Main_class`, `Sub_class`: Diferentes niveles de clasificación química del metabolito.

## Procedimiento y Herramientas de análisis

El proceso de análisis fue realizado en su totalidad en R (versión 4.4.2), y el presente informe fue generado con Quarto.

En primero lugar se busco los datos del proyecto con el paquete `metabolomicsWorkbenchR` utilizando la función `do_query()` para acceder al estudio ST000957. Luego se procedió a crear el objeto `SummarizedExperiment`, con el paquete del mismo nombre. Tras examinar su estructura, se identificó la presencia de datos faltantes, los cuales fueron imputados mediante el algoritmo KNN utilizando el paquete `POMA`. La normalización de los datos también se llevó a cabo con `POMA`, mediante la transformación log-pareto.

Desde este punto se realizó un análisis exploratorio. Para lo cual que usaron paquetes comunes de R y Bioconductor. Algunos de estos paquetes son **`ggplot2`**, junto con herramientas complementarias para mejorar la visualización y **`patchwork`**, que facilitó la organización y combinación de gráficos. Las tablas se generaron con los paquetes **`knitr`** y **`kableExtra`**.

Además se crearon tres funciones personalizadas:

-   `calcular_abundancia_por_sujeto(objeto_se)`: para obtener las abundancias promedios de los metabolitos, llamada

-   `seleccionar_top_y_otros(se, top_n = 20)` : para obtener un objeto `SummarizedExperiment` con los top-n metabolitos más abundantes.

-   `agrupar_por_clase(se, clase)`: obtiene `SummarizedExperiment` agrupando los metabolitos según su clasificación química, sumando las abundancias.

En cuanto al análisis, en primer lugar se exploraron las intensidades absolutas de los metabolitos por fracción y por madre, tanto a nivel de metabolito individual como de clase funcional, empleando gráficos de barras apiladas. Esto permitió explorar el perfil metabólico de las muestras. Para analizar la abundancia de metabolitos individuales, se seleccionaron los 30 metabolitos con mayor intensidad o abundancia.

Posteriormente, tras la normalización, se procedió obtener el número de metabolitos detectados por fracción y madre (Anexo 1).

Siguiendo, se realizó heatmap con el paquete `pheatmap`. Para esto se calculó la varianza por metabolito, y se seleccionaron los 20 con mayor variabilidad, para comparar entre muestras. La función `pheatmap()` también me da la opción de realizar una clusterización entre variables de las muestras, que son la fracción de leche y la madre donadora.

-   Si el metabolito se observa en rojo, tiene mayor abundancia en esa muestra (por encima del promedio);

-   Si esta en azul, tiene menor abundancia (por debajo del promedio);

-   Y si esta en blanco ese metabolito tiene un valor promedio en esa muestra.

Finalmente, con la función `prcomp()` se realizó un análisis de componentes principales (PCA) y se gráfico los primeros dos componentes en un diagrama de dispersión, para observar como se distribuyen las muestras en función de su perfil metabólico.

Los sriptis, el informe, datos y demas archivos del proyecto se pueden obtener en el repositorio de GitHub [@jácome2025]: <https://github.com/juano3101/Jacome-Navarrete-Juan-PEC1>

# Resultados

## Construcción del objeto *`SummarizedExperiment`*

Lo primero se se realizó es el la construcción del *`SummarizedExperiment`*, para lo cual se importaron tres tablas necesarias: el ensayo, colData y el rowData. Además, se procedió a limpiar los datos, mantener solo las columnas deseadas, finalmente los valores faltantes fueron imputados con el método KNN, y no se eliminó ninguna muestra y ningún metabolito.

``` r
# CARGAR MATRICES DE DATOS
assay <- read.delim(params$assay, row.names = 1, check.names = FALSE)
coldata <- read.delim(params$coldata, row.names = 1, check.names = FALSE)
rowdata <- read.delim(params$rowdata, row.names = 1, check.names = FALSE)

# CREAR EL OBJETO SummarizedExperiment
se <- SummarizedExperiment(assays = list(count = assay),
  colData = coldata, rowData = rowdata)

# SE REALIZA UNA IMPUTACIÓN CON EL METODO KNN, SIN REMOVER MUESTRAS
se_imputed <- PomaImpute(se, method = "knn", zeros_as_na = TRUE, remove_na = FALSE)
```

```{r SummarizedExperiment, warning = FALSE, message=FALSE, echo=FALSE}
# CARGAR MATRICES DE DATOS
assay <- read.delim(params$assay, row.names = 1, check.names = FALSE)
coldata <- read.delim(params$coldata, row.names = 1, check.names = FALSE)
rowdata <- read.delim(params$rowdata, row.names = 1, check.names = FALSE)

# REORDENAR EL COLDATA PARA QUE COINCIDA CON LAS FILAS DE LA MATRIZ
coldata <- coldata[colnames(assay), , drop = FALSE]
# AÑADIR LA COLUMNA DE SUJETO EN COLDATA
coldata$sujeto <- gsub("_.*", "", rownames(coldata))

# CREAR EL OBJETO SummarizedExperiment
se <- SummarizedExperiment(
  assays = list(count = assay),
  colData = coldata,
  rowData = rowdata
)

# CONSERVAR SOLO LAS COLUMAS QUE SE DESEO USAR
colData(se) <- colData(se)[, c("Milk_fraction", "sujeto")]
rowData(se) <- rowData(se)[, c("Standardized_name", "Formula", "Super_class", 
                               "Main_class", "Sub_class")]

# CREAR UN VECTOR CON METABOLITOS QUE NO ESTAN DENTRO DE LA BASE
# DE Metabolomics Workbench
sin_nombre_estandarizado <- rowData(se)$Standardized_name == "-"
# ELIMINAR ESOS METABOLITOS
se <- se[!sin_nombre_estandarizado, ]

# CONVERTIR EN FACTORES A LAS VARIABLES CATEGÓRICAS
colData(se)$Milk_fraction <- as.factor(colData(se)$Milk_fraction)
colData(se)$sujeto <- as.factor(colData(se)$sujeto)

save(se, file = "SummarizedExperiment_dataset.Rda")

# SE REALIZA UNA IMPUTACIÓN CON EL METODO KNN, SIN REMOVER MUESTRAS
se_imputed <- PomaImpute(se, method = "knn", zeros_as_na = TRUE,
                         remove_na = FALSE)

# POR ALGUNA RAZÓN ELIMINA LAS VARIABLES DE METABOLITOS, SE LAS VUELVO A AÑADIR
rowData(se_imputed) <- rowData(se)

se
```

El objeto `SummarizedExperiment` contiene un total de 158 metabolitos analizados en 12 muestras de leche humana. La matriz principal de datos, `count`, almacena las intensidades o abundancia de cada metabolito por muestra. Las columnas representan las muestras, etiquetadas como `BLS001A`, `BLS010A`, etc., y cuentan con metadatos asociados a través de `colData`, donde se especifica la fracción de leche (`Milk_fraction`) y la madre que dio la muestra (`sujeto`) del que proviene cada muestra.

```{r t2, echo=FALSE, warning=FALSE, message=FALSE}
# Crear tabla por sujeto
tabla_sujeto <- table(colData(se_imputed)$sujeto) %>%
  as.data.frame() %>%
  setNames(c("Madre", "Frecuencia_madre"))

# Crear tabla por fracción
tabla_fraccion <- table(colData(se_imputed)$Milk_fraction) %>%
  as.data.frame() %>%
  setNames(c("Fracción", "Frecuencia_fracción"))

# Igualar número de filas agregando NA
n_filas <- max(nrow(tabla_sujeto), nrow(tabla_fraccion))
tabla_fraccion[n_filas, ] <- NA

# Convertir la columna 'Fracción' a carácter y reemplazar el NA final por " "
tabla_fraccion$Fracción <- as.character(tabla_fraccion$Fracción)
tabla_fraccion$Fracción[4] <- " "
tabla_fraccion$Frecuencia_fracción[4] <- " "


# Unir en una tabla combinada
tabla_combinada <- cbind(tabla_sujeto, tabla_fraccion)

# Mostrar tabla con encabezado doble
kable(tabla_combinada, booktabs = TRUE, align = "lcrr", 
      caption = "Distribución de muestras por madre y fracción de leche") %>%
  kable_styling(latex_options = c("striped", "hold_position", "scale_down"),
                position = "center", font_size = 10)
```

La Tabla 2 muestra que cada uno de las cuatro madres (BLS001A, BLS002A, BLS003A y BLS010A) aportó exactamente tres muestras. Por su parte, la Tabla 3 que hay cuatro muestras por cada tipo de fracción: fat, skim y whole.

## Análisis de abundancia de metabolitos

A continuación, se presentan diagramas de barras apiladas que muestran la distribución de los metabolitos individuales y su clasificación funcional en cada fracción y madre.

```{r abundancia, warning = FALSE, message=FALSE, fig.width=14, fig.height=10, fig.align='center', echo=FALSE, fig.cap="Abundancia de metabolitos por fracción y por sujeto. A: abundancia de metabolitos. B: abundancia por clasificación principal"}

##ABUNDANCIA TOP 30#######
# aplicar la función declarada para obtener los top 30 metabolitos
se_top <- seleccionar_top_y_otros(se, top_n = 30)
# aplicar la función para promediar la intensidad agrupada en fración y madre
matriz_promedio_sujeto_top <- calcular_abundancia_por_sujeto(se_top)

# Reordenar los niveles del factor 'metabolito'
orden_metabolitos <- matriz_promedio_sujeto_top %>%
  distinct(metabolito) %>%
  pull(metabolito) %>%
  setdiff("Others") %>%
  c("Others",. )  # Poner "Others" al final

# Aplicar en todos los dataframes usados en gráficos
matriz_promedio_sujeto_top$metabolito <- 
  # conierte en factor los metabolitos
  factor(matriz_promedio_sujeto_top$metabolito, levels = orden_metabolitos)

# Paleta de colores, para que others sea de color negro
n_metab <- length(orden_metabolitos) - 1  # sin contar "Others"
colores <- c("black", hue_pal()(n_metab))  # "Others" negro
names(colores) <- orden_metabolitos

# gráfico bundancia absoluta por sujeto y fracción (top 30 metabolitos)
ab_suj_top <- ggplot(matriz_promedio_sujeto_top, 
                     aes(x = Milk_fraction, y = media, fill = metabolito)) +
  geom_bar(stat = "identity") + facet_wrap(~ sujeto, scales = "free_y") +
  labs(title = "Abundancia absoluta por fracción y madre (Top 30 metabolitos)",
       x = "Fracción de leche", y = "Media de intensidad") +
  theme_minimal() +
  guides(fill = guide_legend(ncol = 2))  +
  scale_fill_manual(values = colores) + #leyenda en dos columnas
  theme(text = element_text(size = 10))

### ABUNDANCIA PROMEDIO POR CLASE
#Crear el obejeto SE agrupado por Main_class, con la función creada
se_mainclass  <- agrupar_por_clase(se_imputed, "Main_class")
# aplicar la función para promediar la intensidad agrupada en fración y madre
matriz_promedio_sujeto_mainclass<- calcular_abundancia_por_sujeto(se_mainclass)

# gráficos de abundancia para MAIN CLASE
ab_main_suj <- ggplot(matriz_promedio_sujeto_mainclass, 
                      aes(x = Milk_fraction, y = media, fill = metabolito)) +
  geom_bar(stat = "identity") +
  facet_wrap(~ sujeto, scales = "free_y") +
  labs(title = "Abundancia absoluta promedio por fracción y madre (Main class)",
       x = "Fracción de leche", y = "Media de intensidad") +
  theme_minimal() +
  guides(fill = guide_legend(ncol = 2)) + #leyenda en dos columnas+ 
  theme(text = element_text(size = 12))

# con el paquete patchwork se unen los gráficos
# plot_annotation(tag_levels = 'A') enumera los gráficos
ab_suj_top / ab_main_suj + plot_annotation(tag_levels = 'A')
```

La Figura 1 muestra la abundancia absoluta de metabolitos en leche humana, separada en tres fracciones: lipídica (fat), acuosa (skim) y entera (whole), provenientes de cuatro mujeres.

La Figura 1.A presenta los 30 metabolitos más abundantes. Las fracciones acuosa y entera tienden a tener mayores concentraciones de metabolitos que la fracción lipídica en todas las mujeres, lo que sugiere una mayor concentración de compuestos hidrosolubles en la leche materna. Entre los metabolitos individuales, phosphocholine y L-carnitine fueron los más abundantes en las tres fracciones. En la fracción lipídica, también se observaron altos niveles de glycerophosphocholine y creatine. Estos resultados evidencian similitudes en los metabolitos más abundantes entre individuos, aunque con diferencias en la magnitud de sus intensidades.

La Figura 1.B agrupa los metabolitos según su clasificación funcional principal (Main class), permitiendo una visualización más general de la composición química. Se destaca que los aminoácidos y péptidos, así como las colinas, son la clase más abundante en todas las fracciones y madres. Es importante mencionar que los Carbohidratos (mono y disacáridos) representaron entre el 1 y 2% de la composición de la leche en todas las muestras.

## Análisis multivariante

Para poder tener más confianza en el análisis multivariante y reducir el efecto de variaciones debidos a la técnica, los datos fueron normalizados utilizando el método log-pareto con la función `PomaNorm()`del paquete POMA.

```{r norm, warning = FALSE, message=FALSE, echo=FALSE, fig.width=4, fig.height=2, fig.align='center', fig.cap="Distribución de intensidades normalizadas (log-pareto)"}

### NORMALIZAR DATOS
se_normalized <- se_imputed %>% 
  PomaNorm(method = "log_pareto")
# CARGAR MATRICES DE DATOS
rowData(se_normalized) <- rowData(se)

```

Una vez normalizado se observó que la mayoría de curvas de densidad están centradas en torno a cero, lo que indica que la normalización fue efectiva. También se obtuvo el número total de metabolitos detectados en cada fracción de leche, para las cuatro madres, utilizando los datos normalizados. Se ve claramente que las fracciones acuosa y entera presentan un mayor número de metabolitos en comparación con la fracción lipídica, lo cual concuerda con los patrones observados previamente en las gráficas de abundancia. (ANEXOS 1 y 2)

```{r heatmap, warning = FALSE, message=FALSE, fig.width=8, fig.height=5, fig.align='center', echo=FALSE, fig.cap="Heatmap de los 20 metabolitos más variables entre muestras"}
# Extraer info y preparar
matriz <- assay(se_normalized)
metadata <- as.data.frame(colData(se_normalized)) %>%
  rownames_to_column("Muestra")

#Calcular varianzas y seleccionar los top más variables
varianzas <- apply(matriz, 1, var, na.rm = TRUE) # Calcular varianza por fila
# Filtrar las que no son 0
varianzas_filtradas <- varianzas[varianzas > 0]
# Seleccionar los 30 más variables
top_n <- min(20, length(varianzas_filtradas)) 
# Nombres de los top 30
top_metabolitos <- names(sort(varianzas_filtradas, decreasing = TRUE))[1:top_n] 
# Filtrar la matriz para quedarme con los top 30
matriz_top_var <- matriz[top_metabolitos, ] 

# Anotaciones (Milk_fraction y sujeto)
anotaciones <- as.data.frame(colData(se_normalized)) %>% # Extraer metadata
  select(Milk_fraction, sujeto) # Seleccionar las columnas de interés
rownames(anotaciones) <- colnames(se_normalized) # Asignar nombres de filas

# colores para para la fraccion y los sujetos, que se definieron antes
colores_para_heatmap <- list(
  Milk_fraction = colores_fraccion,
  sujeto = colores_sujeto)

# Heatmap final
heatmap <- pheatmap(matriz_top_var,
           annotation_col = anotaciones,
           annotation_colors = colores_para_heatmap,
           show_rownames = TRUE,
           show_colnames = FALSE,
           cluster_rows = FALSE,
           cluster_cols = TRUE,
           color = colorRampPalette(c("navy", "white", "firebrick3"))(100),
           fontsize_row = 7) + theme(text = element_text(size = 12))
```

La Figura 2 muestra un heatmap de las intensidades normalizadas de los 20 metabolitos con mayor variabilidad entre las muestras. Se observan agrupamientos de muestras por madre, especialmente en BLS001A y BLS003A, así como diferencias claras entre fracciones de leche en metabolitos como los ácidos biliares conjugados (por ejemplo, Glycodeoxycholic.acid.GDCA_R2).

Además, compuestos como Stachydrine (un alcaloide natural), METHYL.BETA.D.GALACTOSIDE (un derivado de galactosa), péptidos como L-Anserine y lípidos como LysoPC y LysoPE presentan una alta variabilidad tanto entre madres como entre fracciones. Esto sugiere que el perfil metabolómico de la leche humana está influenciado tanto por características individuales como por el tipo de fracción analizada.

```{r pca, warning = FALSE, message=FALSE, fig.width=5, fig.height=4, fig.align='center', echo=FALSE, fig.cap="Análisis de componentes principales (PCA) de muestras de leche humana según metabolitos"}
# realizar pca
# Transponer la matriz para calcular pca para muestras
matriz_pca <- t(assay(se_normalized)) 
pca <- prcomp(matriz_pca, scale. = TRUE)

# Extraer coordenadas del PCA
pca_df <- as.data.frame(pca$x) %>% # Convertir a dataframe
  rownames_to_column("Muestra") %>% # Añadir nombres de filas
  left_join(as.data.frame(colData(se_normalized)) %>% # Añadir metadata
              tibble::rownames_to_column("Muestra"), 
            by = "Muestra") # Unir por la columna Muestra

# Graficar PCA de las muestras
biplot_pca_muestras  <-  ggplot(pca_df, aes(x = PC1, y = PC2, color = sujeto, 
                                            shape = Milk_fraction, 
                                            label = Muestra)) +
  geom_point(size = 4) +
  geom_text_repel(size = 3.5, max.overlaps = 100) +
  labs(x = paste0("PC1 (", round(summary(pca)$importance[2, 1] * 100, 1), "% var)"),
       y = paste0("PC2 (", round(summary(pca)$importance[2, 2] * 100, 1), "% var)")) +
  theme_minimal() +
  theme(legend.position = "right", text = element_text(size = 10)) +
  scale_color_manual(values = colores_sujeto)

biplot_pca_muestras
```

La Figura 3 muestra un análisis de componentes principales (PCA) basado en las intensidades de metabolitos en muestras de leche humana. Los dos primeros componentes explican el 66.3% de la variabilidad total. Se observan agrupamientos por madre, con las muestras de cada madre ubicadas próximas entre sí. Por lo contrario, no se evidencia una agrupación por fracción de leche, aunque la fracción grasa (fat) parece separarse de las demás. Esto sugiere que la composición metabolómica varía principalmente entre individuos, y en menor medida según la fracción de leche.

# Discusión

El presente análisis permitió caracterizar el perfil metabolómico de muestras de leche humana en las fracciones lipídica, acuosa y entera, procedentes de cuatro madres distintas, utilizando LC-MS. Para este estudio se utilizaron exclusivamente los datos obtenidos en modo de ionización positiva.

Entre los metabolitos más abundantes se identificaron compuestos como phosphocholine y L-carnitine, presentes en todas las fracciones, en concordancia con otros estudios [@torrezlamberti2020; @hampel2021]. La phosphocholine es una forma abundante de colina en la leche materna, esencial para la síntesis de fosfolípidos y el desarrollo cerebral del lactante, particularmente en los primeros meses de vida. [@poulsen2022; @hampel2021]. La carnitina, por otro lado, facilita el transporte de ácidos grasos hacia las mitocondrias para la producción de energía [@poulsen2022; @maheshwari2022].

Al agrupar los metabolitos por su clase funcional, se observó un predominio de aminoácidos y péptidos, a parte de colinas y glicerofosfocolinas que ya se menciono anteriormente. Algunas aproximaciones indican que la leche porcentadene un porcentaje de aminoácidos de entre el 5 y el 10 % del contenido total de nitrógeno [@moughan2024].

La limitada detección de carbohidratos y ácidos grasos de cadena corta en este estudio puede atribuirse al uso exclusivo del modo de ionización positiva. Se ha demostrado que metabolitos de naturaleza ácida y polar presentan mayor eficiencia de ionización en modo negativo [@liigand2017]. Asimismo, las condiciones cromatográficas y el tipo de ionización seleccionados influyen directamente en la detección de metabolitos [@lei2011].

Respecto a la variabilidad entre muestras, los análisis de abundancia, heatmap y PCA coincidieron que las diferencias entre madres fueron más marcadas que entre fracciones. Esta variabilidad podría deberse a diferencias fisiológicas, genéticas o ambientales, como la dieta materna, el perfil hormonal o el estilo de vida [@golan2020; @cortes-macías2021]. Estudios recientes también sugieren que variables como el tipo de parto o el nivel de estrés materno pueden afectar la composición metabólica de la leche [@juncker2025; @matharu2024].

El heatmap de los 20 metabolitos más variables reveló que algunos compuestos, como ciertos ácidos biliares conjugados (por ejemplo, *Glycodeoxycholic.acid.GDCA_R2*), se concentran preferentemente en las fracciones lipídica o entera, en línea con su naturaleza hidrofóbica. Aunque sus concentraciones suelen ser bajas en condiciones fisiológicas, se ha documentado que ciertos fármacos pueden incrementar sus niveles en la leche materna, sin que esto represente un riesgo clínico significativo para el lactante [@simják2022]. Este hallazgo sugiere que tanto el tipo de fracción como las condiciones fisiológicas de la madre pueden modular el perfil de algunos metabolitos.

Este estudio presenta algunas limitaciones. En primer lugar, el uso exclusivo del modo de ionización positiva probablemente limitó la detección de metabolitos relevantes como azúcares y ácidos orgánicos. En segundo lugar, el reducido número de sujetos (n = 4) impide generalizar los hallazgos a una población más amplia. En futuras investigaciones se recomienda aplicar modo dual de ionización (positivo y negativo) para lograr una cobertura metabolómica más completa. Asimismo, incluir un mayor número de madres y considerar variables como el estadio de lactancia, la dieta materna y el estado de salud podría enriquecer el análisis y permitir asociaciones más profundas con factores fisiológicos.

En conjunto, los resultados indican que no hay un único factor que explique la variabilidad metabolómica, sino una interacción compleja entre el sujeto y la fracción de leche. Este hallazgo es consistente con estudios previos que destacan la alta complejidad y variabilidad de la composición de la leche humana, subrayando la importancia de analizar múltiples niveles para comprender su perfil funcional.

# Conclusiones

El presente análisis permitió caracterizar el perfil metabolómico de leche humana en tres fracciones, revelando una mayor abundancia de metabolitos en las fracciones acuosa y entera. Se identificaron metabolitos dominantes como phosphocholine y L-carnitine, presentes en todas las fracciones y sujetos. Al agrupar por clase funcional, se observó un predominio de aminoácidos, péptidos y colinas. El análisis multivariante evidenció que las diferencias entre madres fueron más relevantes que las diferencias entre fracciones de leche, lo que sugiere una fuerte influencia relacionada posiblemente con factores fisiológicos, genéticos o ambientales.

Asimismo, se identificaron metabolitos con afinidad específica por ciertas fracciones, como los ácidos biliares conjugados, que se concentraron en la fracción grasa. El uso exclusivo del modo de ionización positiva limitó la detección de metabolitos polares y ácidos, lo que resalta la necesidad de aplicar enfoques analíticos complementarios en futuros estudios. Estos hallazgos subrayan la complejidad de la leche humana y la importancia de un análisis integral para comprender su composición y función.

# Anexos

## ANEXO 1

```{r desidad_norm, warning = FALSE, message=FALSE, echo=FALSE, fig.width=4, fig.height=2, fig.align='center', fig.cap="Distribución de intensidades normalizadas (log-pareto)"}

### NORMALIZAR DATOS
se_normalized <- se_imputed %>% 
  PomaNorm(method = "log_pareto")
# CARGAR MATRICES DE DATOS
rowData(se_normalized) <- rowData(se)

# Gráfico de densidad después de la normalización
den_normalizado <- PomaDensity(se_normalized, x = "features") +
  theme(legend.position = "none") + theme(text = element_text(size = 8))

den_normalizado
```

## ANEXO 2

```{r num_met, warning = FALSE, message=FALSE, echo=FALSE, fig.width=4, fig.height=1.5, fig.align='center', echo=FALSE, fig.cap="Número de metabolitos detectados por fracción de leche y madre"}

# Extraer info y preparar
#matriz <- assay(se_normalized)
#metadata <- as.data.frame(colData(se_normalized)) %>%
#  rownames_to_column("Muestra")

# Calcular metabolitos detectados (abundancia > 0) por muestra
# Calcular número de metabolitos detectados por muestra (2 es para cada col.) 
metabolitos_por_muestra <- apply(matriz, 2, function(x) sum(x > 0))

# Agregar al metadata
metadata$metabolitos_detectados <- metabolitos_por_muestra
colData(se_normalized)[["metabolitos_detectados"]] <- metabolitos_por_muestra

# Agrupar por sujeto y fracción, y graficar
num_metabolitos_sujeto <- ggplot(metadata, 
                                 aes(x = Milk_fraction, 
                                     y = metabolitos_detectados, 
                                     group = sujeto, color = sujeto)) +
    geom_line(size = 1.1) +
    geom_point(size = 2) +
    labs(x = "Fracción de leche", y = "Núm. metabolitos detectados") +
    theme_minimal() + scale_color_manual(values = colores_sujeto) + 
  theme(text = element_text(size = 8))

num_metabolitos_sujeto 

```

# Referencias
